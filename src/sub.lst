   1               	# 1 "sub.S"
   1               	/*------------------------------------------------------
   0               	
   0               	
   2               	
   3               		DISK II Emulator Farmware (1 of 2) for ATMEGA328P
   4               		
   5               		2009.11.16 by Koichi Nishida
   6               	
   7               	------------------------------------------------------*/
   8               	
   9               	/*
  10               	This is a part of the firmware for DISK II emulator by Nishida Radio.
  11               	
  12               	Copyright (C) 2009 Koichi NISHIDA
  13               	email to Koichi NISHIDA: tulip-house@msf.biglobe.ne.jp
  14               	
  15               	This program is free software; you can redistribute it and/or modify it
  16               	under the terms of the GNU General Public License as published by
  17               	the Free Software Foundation; either version 3 of the License.
  18               	
  19               	This program is distributed in the hope that it will be useful,
  20               	but WITHOUT ANY WARRANTY; without even the implied warranty of
  21               	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  22               	See the GNU General Public License for more details.
  23               	
  24               	You should have received a copy of the GNU General Public License
  25               	along with this program. If not, see <http://www.gnu.org/licenses/>.
  26               	*/
  27               	
  28               	#include "config.h"
   1               	/*
  29               	
  30               	/*
  31               	if the crystal on your SDISK II is 25 MHz, 
  32               	I recommend you to replace it with 27 MHz,
  33               	or ask Nishida Radio.
  34               	if you don't want to replace it, change the following to
  35               	*/
  36               	.equ CRYSTAL, 25
  37               	//.equ CRYSTAL, 27
  38               	
  39               	.equ PINB, 0x03
  40               	.equ DDRB, 0x04
  41               	.equ PORTB, 0x05
  42               	.equ PINC, 0x06
  43               	.equ DDRC, 0x07
  44               	.equ PORTC, 0x08
  45               	.equ PIND, 0x09
  46               	.equ DDRD, 0x0a
  47               	.equ PORTD, 0x0b
  48               	.equ SREG, 0x3f
  49               	.equ TCNT0, 0x26
  50               	
  51               	.global __vector_1
  52               	.global __vector_16
  53               	.global wait5
  54               	
  55               	.global readPulse
  56               	.global bitByte
  57               	.global sector
  58               	.global prepare
  59               	.global writeData
  60               	.global writeBack
  61               	.global writePtr
  62               	
  63               	.func wait5
  64               	wait5:
  65:sub.S         **** 	ldi r18,24
  66               	wait51:
  67:sub.S         **** 	nop
  68:sub.S         **** 	dec r18
  69:sub.S         **** 	brne wait51
  70:sub.S         **** 	sbiw r24,1
  71:sub.S         **** 	brne wait5
  72:sub.S         **** 	ret
  73               	.endfunc	
  74               		
  75               	.func wait1
  76               	wait1:
  77:sub.S         **** 	nop		; 1
  78:sub.S         **** 	nop		; 1
  79:sub.S         **** 	nop		; 1
  80:sub.S         **** 	nop		; 1
  81:sub.S         **** 	nop		; 1
  82:sub.S         **** 	nop		; 1
  83:sub.S         **** 	nop		; 1
  84:sub.S         **** 	nop		; 1
  85               	.if CRYSTAL==27
  86               		nop		; 1
  87               	.endif
  88:sub.S         **** 	ret		; 4
  89               	.endfunc
  90               	
  91               	/* Vetor timer0 overflow */
  92               	.func __vector_16
  93               	__vector_16:
  94:sub.S         **** 	push	r26
  95:sub.S         **** 	in		r26, SREG
  96:sub.S         **** 	push	r26
  97:sub.S         **** 	push	r27
  98:sub.S         **** 	push	r18
  99:sub.S         **** 	lds		r26,readPulse
 100:sub.S         **** 	lds		r18,protect
 101:sub.S         **** 	or		r26,r18
 102:sub.S         **** 	out 	PORTC,r26
 103               	.if CRYSTAL==27	
 104               		ldi		r26,170 ; 165=28Mhz; 27Mhz=170		; 1
 105               	.else
 106:sub.S         **** 	ldi		r26,180 ;  ;ok 176; 185  	; 1
 107               	.endif
 108:sub.S         **** 	out		TCNT0,r26	; 1
 109:sub.S         **** 	ldi		r18,0		; 1
 110:sub.S         **** 	rcall	wait1		; 11
 111:sub.S         **** 	lds		r26,protect	; 2
 112:sub.S         **** 	out 	PORTC,r26
 113:sub.S         **** 	lds		r27,prepare
 114:sub.S         **** 	and		r27,r27
 115:sub.S         **** 	breq 	NOT_PREPARE
 116:sub.S         **** 	sts		readPulse,r18
 117:sub.S         **** 	pop		r18
 118:sub.S         **** 	pop		r27
 119:sub.S         **** 	pop		r26
 120:sub.S         **** 	out		SREG,r26	
 121:sub.S         **** 	pop		r26
 122:sub.S         **** 	reti
 123               	NOT_PREPARE:
 124:sub.S         **** 	ldi		r26,_CLK_DINCS	; 1
 125:sub.S         **** 	out		PORTD,r26		; 1
 126:sub.S         **** 	in		r26,PIND		; 1
 127:sub.S         **** 	andi	r26,1			; 1
 128:sub.S         **** 	lsl		r26				; 1
 129:sub.S         **** 	mov		r18,r26			; 1
 130:sub.S         **** 	ldi		r26,NCLK_DINCS	; 1
 131:sub.S         **** 	out		PORTD,r26		; 1
 132:sub.S         **** 	lds		r26,bitbyte
 133:sub.S         **** 	lds		r27,(bitbyte+1)
 134:sub.S         **** 	adiw	r26,1
 135:sub.S         **** 	sts		bitbyte,r26
 136:sub.S         **** 	sts		(bitbyte+1),r27
 137:sub.S         **** 	cpi		r26,((402*8)%256)
 138:sub.S         **** 	brne	LBL1
 139:sub.S         **** 	cpi		r27,((402*8)/256)
 140:sub.S         **** 	brne	LBL1
 141               		; set prepare flag
 142:sub.S         **** 	ldi		r26,1
 143:sub.S         **** 	sts		prepare,r26
 144               		; discard 112 byte (including CRC 2 byte)
 145:sub.S         **** 	push	r28
 146:sub.S         **** 	ldi		r28,112
 147               	DSC_LP2:
 148:sub.S         **** 	ldi		r26,8
 149               	DSC_LP1:
 150:sub.S         **** 	ldi		r27,_CLK_DINCS	; 1
 151:sub.S         **** 	out		PORTD,r27		; 1
 152:sub.S         **** 	ldi		r27,NCLK_DINCS	; 1
 153:sub.S         **** 	out		PORTD,r27
 154:sub.S         **** 	dec		r26
 155:sub.S         **** 	brne	DSC_LP1
 156:sub.S         **** 	dec		r28
 157:sub.S         **** 	brne	DSC_LP2
 158:sub.S         **** 	pop		r28
 159               	LBL1:
 160:sub.S         **** 	sts		readPulse,r18
 161:sub.S         **** 	pop		r18
 162:sub.S         **** 	pop		r27
 163:sub.S         **** 	pop		r26
 164:sub.S         **** 	out		SREG,r26	
 165:sub.S         **** 	pop		r26
 166:sub.S         **** 	reti
 167               	.endfunc
 168               	
 169               	/* Vetor INT0 */
 170               	.func __vector_1
 171               	__vector_1:
 172:sub.S         **** 	push	r18			; 1
 173:sub.S         **** 	in		r18, SREG	; 1
 174:sub.S         **** 	push	r18			; 1
 175:sub.S         **** 	sbic	PINC,0
 176:sub.S         **** 	rjmp	NOT_ENABLE
 177:sub.S         **** 	push	r19			; 2
 178:sub.S         **** 	lds		r19,magState; 2
 179               	WLP8:
 180               		; wait start bit 1
 181:sub.S         **** 	in		r18,PINC	; 1
 182:sub.S         **** 	andi	r18,4		; 1
 183:sub.S         **** 	eor		r18,r19		; 1
 184:sub.S         **** 	breq	WLP8		; 2/1
 185:sub.S         **** 	in		r18,PINC	; 1
 186:sub.S         **** 	andi	r18,4		; 1
 187:sub.S         **** 	sts		magState,r18; 2
 188:sub.S         **** 	ldi		r18, 8		; 1
 189               	WLP9:
 190:sub.S         **** 	dec		r18			; 1
 191:sub.S         **** 	brne	WLP9		; 2
 192:sub.S         **** 	nop					; 1
 193:sub.S         **** 	push	r20			; 2
 194:sub.S         **** 	push	r21			; 2
 195:sub.S         **** 	push	r22			; 2
 196:sub.S         **** 	push	r23			; 2
 197:sub.S         **** 	push	r24			; 2
 198:sub.S         **** 	push	r30			; 2
 199:sub.S         **** 	push	r31			; 2
 200:sub.S         **** 	ldi		r22,0		; 1 start storing
 201:sub.S         **** 	lds		r30,(writePtr)
 202:sub.S         **** 	lds		r31,(writePtr+1)
 203:sub.S         **** 	ldi		r19,lo8(349) ;1
 204:sub.S         **** 	ldi		r20,hi8(349) ;1 
 205:sub.S         **** 	rjmp	ENTR		; 2
 206               	WLP2:
 207:sub.S         **** 	lds		r21,magState; 2
 208               	WLP6:
 209               		; wait start bit 1
 210:sub.S         **** 	in		r23,PINC	; 1
 211:sub.S         **** 	andi	r23,4		; 1
 212:sub.S         **** 	eor		r23,r21		; 1
 213:sub.S         **** 	breq	WLP6		; 2/1
 214:sub.S         **** 	in		r23,PINC	; 1
 215:sub.S         **** 	andi	r23,4		; 1
 216:sub.S         **** 	sts		magState,r23; 2
 217:sub.S         **** 	ldi		r23, 14		; 1
 218               	WLP7:
 219:sub.S         **** 	dec		r23			; 1
 220:sub.S         **** 	brne	WLP7		; 2
 221               	ENTR:
 222:sub.S         **** 	ldi		r18,7		; 1
 223:sub.S         **** 	ldi		r24,1		; 1
 224               	WLP1:
 225:sub.S         **** 	in		r23,PIND	; 1
 226:sub.S         **** 	andi	r23,4		; 1
 227:sub.S         **** 	brne	WRITE_END	; 1	
 228:sub.S         **** 	nop					; 1	
 229               	.if CRYSTAL==27	
 230               		ldi		r23,30; 32=28Mhz  ;27mhz=30		; 1
 231               	.else
 232:sub.S         **** 	nop
 233:sub.S         **** 	ldi		r23,27		; 1
 234               	.endif
 235               	WLP3:
 236:sub.S         **** 	dec		r23			; 1
 237:sub.S         **** 	brne	WLP3		; 2
 238               	WLP5:
 239:sub.S         **** 	in		r23,PINC	; 1
 240:sub.S         **** 	andi	r23,4		; 1
 241:sub.S         **** 	lds		r21,magState; 2
 242:sub.S         **** 	sts		magState,r23; 2
 243:sub.S         **** 	eor		r23,r21		; 1
 244:sub.S         **** 	lsr		r23			; 1
 245:sub.S         **** 	lsr		r23			; 1
 246:sub.S         **** 	lsl		r24			; 1
 247:sub.S         **** 	or		r24,r23		; 1
 248:sub.S         **** 	dec		r18			; 1
 249:sub.S         **** 	brne	WLP1		; 2/1
 250:sub.S         **** 	cpi		r24,0xD5	; 1
 251:sub.S         **** 	brne	NOT_START	; 2/1
 252:sub.S         **** 	ldi		r22,1		; 1
 253               	NOT_START:
 254:sub.S         **** 	cpi		r22,0		; 1
 255:sub.S         **** 	breq	WLP2		; 1
 256:sub.S         **** 	st		Z+,r24		; 2
 257:sub.S         **** 	subi	r19,1		; 1
 258:sub.S         **** 	sbci	r20,0		; 1
 259:sub.S         **** 	brne	WLP2		; 2/1
 260               	WRITE_END:
 261               	
 262:sub.S         **** 	push	r25
 263:sub.S         **** 	push	r26
 264:sub.S         **** 	push	r27
 265:sub.S         **** 	call	writeBack
 266:sub.S         **** 	pop		r27
 267:sub.S         **** 	pop		r26
 268:sub.S         **** 	pop		r25
 269:sub.S         **** 	pop		r31
 270:sub.S         **** 	pop		r30
 271:sub.S         **** 	pop		r24
 272:sub.S         **** 	pop		r23
 273:sub.S         **** 	pop		r22
 274:sub.S         **** 	pop		r21
 275:sub.S         **** 	pop		r20
 276:sub.S         **** 	pop		r19
 277               	NOT_ENABLE:
 278:sub.S         **** 	pop		r18
 279:sub.S         **** 	out		SREG,r18	
 280:sub.S         **** 	pop		r18
 281:sub.S         **** 	reti
 282               	.endfunc
DEFINED SYMBOLS
               sub.S:36     *ABS*:00000019 CRYSTAL
               sub.S:39     *ABS*:00000003 PINB
               sub.S:40     *ABS*:00000004 DDRB
               sub.S:41     *ABS*:00000005 PORTB
               sub.S:42     *ABS*:00000006 PINC
               sub.S:43     *ABS*:00000007 DDRC
               sub.S:44     *ABS*:00000008 PORTC
               sub.S:45     *ABS*:00000009 PIND
               sub.S:46     *ABS*:0000000a DDRD
               sub.S:47     *ABS*:0000000b PORTD
               sub.S:48     *ABS*:0000003f SREG
               sub.S:49     *ABS*:00000026 TCNT0
               sub.S:171    .text:000000b4 __vector_1
               sub.S:93     .text:00000020 __vector_16
               sub.S:64     .text:00000000 wait5
               sub.S:66     .text:00000002 wait51
               sub.S:76     .text:0000000e wait1
               sub.S:123    .text:0000005c NOT_PREPARE
               sub.S:159    .text:000000a4 LBL1
               sub.S:147    .text:00000090 DSC_LP2
               sub.S:149    .text:00000092 DSC_LP1
               sub.S:277    .text:00000174 NOT_ENABLE
               sub.S:179    .text:000000c4 WLP8
               sub.S:189    .text:000000d6 WLP9
               sub.S:221    .text:00000114 ENTR
               sub.S:206    .text:000000fa WLP2
               sub.S:208    .text:000000fe WLP6
               sub.S:218    .text:00000110 WLP7
               sub.S:224    .text:00000118 WLP1
               sub.S:260    .text:00000154 WRITE_END
               sub.S:235    .text:00000124 WLP3
               sub.S:238    .text:00000128 WLP5
               sub.S:253    .text:00000148 NOT_START

UNDEFINED SYMBOLS
readPulse
bitByte
sector
prepare
writeData
writeBack
writePtr
protect
bitbyte
magState
